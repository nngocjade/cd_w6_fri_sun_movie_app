[{"C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\index.js":"1","C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\reportWebVitals.js":"2","C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\App.js":"3","C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\pages\\LoginPage.js":"4","C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\components\\PublicNavbar.js":"5","C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\pages\\SignUpPage.js":"6","C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\pages\\MovieDetailPage.js":"7","C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\pages\\NowPlayingPage.js":"8","C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\components\\MovieList.js":"9","C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\pages\\UpcomingPage.js":"10"},{"size":589,"mtime":1610781708274,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":2554,"mtime":1610956308205,"results":"14","hashOfConfig":"12"},{"size":3336,"mtime":1610809811454,"results":"15","hashOfConfig":"12"},{"size":798,"mtime":1610951817327,"results":"16","hashOfConfig":"12"},{"size":4199,"mtime":1610809773977,"results":"17","hashOfConfig":"12"},{"size":2052,"mtime":1610957019282,"results":"18","hashOfConfig":"12"},{"size":1515,"mtime":1610956227689,"results":"19","hashOfConfig":"12"},{"size":2428,"mtime":1610954684593,"results":"20","hashOfConfig":"12"},{"size":1467,"mtime":1610951857277,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"tv2c88",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\index.js",[],["46","47"],"C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\reportWebVitals.js",[],"C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\App.js",["48","49","50"],"import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NowPlayingPage from \"./pages/NowPlayingPage\";\nimport MovieDetailPage from \"./pages/MovieDetailPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport SignUpPage from \"./pages/SignUpPage\";\nimport PublicNavbar from \"./components/PublicNavbar\";\nimport UpcommingPage from \"./pages/UpcomingPage\";\n\nconst API_KEY = process.env.REACT_APP_MOVIE_API_KEY;\nconst BASE_URL = process.env.REACT_APP_MOVIE_API_URL;\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]); //default, no movies\n  const [errorMessage, setErrorMessage] = useState();\n  const [loading, setLoading] = useState(true);\n  const [pageNum, setPageNum] = useState(1);\n\n  // console.log(\"API-KEY\", API_KEY);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      try {\n        let url = `${BASE_URL}/search/movie/now_playing?api_key=${API_KEY}&language=en-US&page=${pageNum}&query= ${query}`;\n        console.log(\"url:\", url);\n        const response = await fetch(url);\n        const data = await response.json();\n        if (response.ok) {\n          console.log(\"data\", data);\n          setMovies(data.results);\n        } else {\n          setErrorMessage(`FETCH MOVIE ERROR: ${data.status_message}`);\n        }\n      } catch (error) {\n        setErrorMessage(`FETCH MOVIE ERROR: ${error.status_message}`);\n      }\n      setLoading(false);\n    }\n    fetchData();\n  }, [query, pageNum]);\n\n  //HANDLE SEARCH INPUT AND BUTTON\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    setQuery(searchTerm);\n  };\n\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  if (loading) return <div>loading....</div>;\n  return (\n    <div className=\"App\">\n      <PublicNavbar\n        handleOnSubmit={handleOnSubmit}\n        searchTerm={searchTerm}\n        onChange={(searchTerm) => handleOnChange(searchTerm)}\n      />\n      <Router>\n        <Switch>\n          <Route exact path=\"/upcoming\" component={UpcommingPage} />\n          <Route exact path=\"/movie/:id\" component={MovieDetailPage} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/signup\" component={SignUpPage} />\n          <Route exact path=\"/\" component={NowPlayingPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\pages\\LoginPage.js",[],"C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\components\\PublicNavbar.js",[],"C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\pages\\SignUpPage.js",[],"C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\pages\\MovieDetailPage.js",["51","52"],"C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\pages\\NowPlayingPage.js",["53","54"],"import React, { useEffect, useState } from \"react\";\r\nimport MovieList from \"../components/MovieList\";\r\n\r\n// const SEARCH_API = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=`;\r\nconst API_KEY = process.env.REACT_APP_MOVIE_API_KEY;\r\nconst BASE_URL = process.env.REACT_APP_MOVIE_API_URL;\r\n\r\nconst NowPlayingPage = () => {\r\n  const [movies, setMovies] = useState([]); //default, no movies\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [pageNum, setPageNum] = useState(1);\r\n\r\n  // console.log(\"API-KEY\", API_KEY);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      try {\r\n        let url = `${BASE_URL}/movie/now_playing?api_key=${API_KEY}&language=en-US&page=${pageNum}`;\r\n        console.log(\"url:\", url);\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          console.log(\"data\", data);\r\n          setMovies(data.results);\r\n        } else {\r\n          setErrorMessage(`FETCH MOVIE ERROR: ${data.status_message}`);\r\n        }\r\n      } catch (error) {\r\n        setErrorMessage(`FETCH MOVIE ERROR: ${error.status_message}`);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [pageNum]);\r\n\r\n  // console.log(movies);\r\n  if (loading) return <div>loading....</div>;\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <MovieList movies={movies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NowPlayingPage;\r\n","C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\components\\MovieList.js",[],"C:\\Users\\ngocn\\Documents\\CoderSchool\\MainCourse\\week_6\\Fri\\linkedToGithub\\movie-app\\src\\pages\\UpcomingPage.js",["55","56","57"],"import React, { useEffect, useState } from \"react\";\r\nimport MovieList from \"../components/MovieList\";\r\n\r\n// const SEARCH_API = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=`;\r\nconst API_KEY = process.env.REACT_APP_MOVIE_API_KEY;\r\nconst BASE_URL = process.env.REACT_APP_MOVIE_API_URL;\r\n\r\nconst UpcommingPage = () => {\r\n  const [movies, setMovies] = useState([]); //default, no movies\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [pageNum, setPageNum] = useState(1);\r\n\r\n  // console.log(\"API-KEY\", API_KEY);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      try {\r\n        const url = `${BASE_URL}/movie/upcomming?api_key=${API_KEY}&language=en-US&page=${pageNum}`;\r\n        console.log(\"url:\", url);\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          console.log(\"data\", data);\r\n          setMovies(data.results);\r\n        } else {\r\n          setErrorMessage(`FETCH MOVIE ERROR: ${data.status_message}`);\r\n        }\r\n      } catch (error) {\r\n        setErrorMessage(`FETCH MOVIE ERROR: ${error.status_message}`);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [pageNum]);\r\n\r\n  // console.log(movies);\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <MovieList movies={movies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpcommingPage;\r\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":18,"column":10,"nodeType":"64","messageId":"65","endLine":18,"endColumn":16},{"ruleId":"62","severity":1,"message":"66","line":19,"column":10,"nodeType":"64","messageId":"65","endLine":19,"endColumn":22},{"ruleId":"62","severity":1,"message":"67","line":21,"column":19,"nodeType":"64","messageId":"65","endLine":21,"endColumn":29},{"ruleId":"62","severity":1,"message":"68","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":22},{"ruleId":"62","severity":1,"message":"66","line":11,"column":10,"nodeType":"64","messageId":"65","endLine":11,"endColumn":22},{"ruleId":"62","severity":1,"message":"66","line":10,"column":10,"nodeType":"64","messageId":"65","endLine":10,"endColumn":22},{"ruleId":"62","severity":1,"message":"67","line":12,"column":19,"nodeType":"64","messageId":"65","endLine":12,"endColumn":29},{"ruleId":"62","severity":1,"message":"66","line":10,"column":10,"nodeType":"64","messageId":"65","endLine":10,"endColumn":22},{"ruleId":"62","severity":1,"message":"69","line":11,"column":10,"nodeType":"64","messageId":"65","endLine":11,"endColumn":17},{"ruleId":"62","severity":1,"message":"67","line":12,"column":19,"nodeType":"64","messageId":"65","endLine":12,"endColumn":29},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'movies' is assigned a value but never used.","Identifier","unusedVar","'errorMessage' is assigned a value but never used.","'setPageNum' is assigned a value but never used.","'TrainRounded' is defined but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]